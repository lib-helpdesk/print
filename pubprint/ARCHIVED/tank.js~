var refreshInterval = 1000*60; //time in milliseconds
var timeLeft = refreshInterval / 1000; //variable for keeping track of the countdown

$(function() { //onload, runs when page finishes loading
	fetchDeviceStatus();
	var intervalRefresh = setInterval("fetchDeviceStatus()",refreshInterval);
	var intervalTimer = setInterval("updateTimer()",1000);
});

//decrements timeLeft by 1, stops at 0
//updates the refresh indicator text
function updateTimer() {
	timeLeft = Math.max(timeLeft-1,0);
	$("div#refresh").html("This page will refresh in " + timeLeft + " seconds");	
}

//updates printer statuses
//pings each printer's device status page, parses text out of html
//places html object into appropriate category
function fetchDeviceStatus() {
	timeLeft = refreshInterval / 1000;

	$("div#noresponse").hide();
	$("div#urgent div").remove();
	$("div#noresponse div").remove();
	$("div#needservice div").remove();
	$("div#goodservice div").remove();
	
	//iterate through printers
	//printers defined in printers.js
	for (var i=0; i<printers.length; i++) {
		var printer = printers[i];
		if ((printer.type == "HP9050") || (printer.type == "HP4515")) {
			fetchDeviceStatusHP9050(printer);
		} else if (printer.type == "HP4700") {
			fetchDeviceStatusHP4700(printer);
		}

	}

			
	for (var i=0; i<printers.length; i++) {
		if (printers[i]["error"])
			alert('error logged');
	}
}

function fetchDeviceStatusHP9050(printer) {

	var urlDeviceStatus = "http://" + printer.ip + "/hp/device/this.LCDispatcher";
	
	//create a jQuery HTML object to be added to the "no response category"
	//this will be removed later in this function if/when printer responds to HTTP request
	var divPending = $("<div>")
		.attr('id',"pending"+printer.nameShort)
		.html(printer.name + " [<a href=\"" + urlDeviceStatus + "\">Status Page</a>]");
	$("div#noresponse").show().append(divPending);

	//jQuery call to make HTTP POST request to fetchUrl.php
	//append a random integer to querystring to prevent returning a cached version of the page
	//pass the url of the printer device status page and the printer object
	//	also another random number for the same reason
	$.post("fetchUrl.php?rnd="+Math.random(),{url:urlDeviceStatus,printer:printer,rnd:Math.random()}, function(data) { //if the printer responds to the HTTP request, this function will run
	//data is the HTML generated by the device status page by way of fetchUrl.php
		var strHTML = data;
		var statusValue = 0;
				
		//parse out the printer object data that's been appended to the HTML by fetchUrl.php
		var strPrinterData = strHTML.match(/\[printerData\].*\[\/printerData\]/)[0];
		strPrinterData = strPrinterData.replace(/\[\/*printerData\]/g,'');
		var printer = $.parseJSON(strPrinterData);
				
		//get the HTML data starting from a specific spot on the page
		//remove all HTML tags
		//remove all HTML comments
		//replace instances of multiple line breaks in a row with a single line break
		//create an array from this text, separating elements by line breaks
		var strForm = strHTML.match(/\<form\sid=\"deviceStatusPage\".*[\s\S]*/)[0];
		var strFormNoTags = strForm.replace(/\<.*\>/g,'')
			.replace(/\<!--.*[\s\S]*--\>/g,'')
			.replace(/\n+/g,'\n');
		var aryDeviceStatus = strFormNoTags.split('\n');
		
		//in this state, the element in position 1 will be the text of the current status
		//get status
		var currentStatus = aryDeviceStatus[1];
						
		//parse out the text "Cartridge...%"
		//then parse out the numbers from that string to get the toner level
		//get toner
		var currentToner = "N/A";
		var currentTonerPercentage;
		currentTonerPercentage = strFormNoTags.match(/.*Cartridge.*%.*\n/i);
		
		if (currentTonerPercentage)
			currentToner = currentTonerPercentage[0].match(/\d+.*\n/)[0];				

		//parse out the text "Maintenance Kit...%"
		//then parse out the numbers from that string to get the maintenance kit level
		//get maintenance
		var strCurrentMK = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/);
		if (strCurrentMK)
			var currentMaintenance = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
		else
			var currentMaintenance = "N/A";
		
		//get a chunk of the text that starts with "Media" and ends in "</table>"
		//replace ">" with ">" followed by a line break
		//remove all HTML tags
		//replace instances of multiple line breaks in a row with a single line break
		//remove all instances of "&nbsp;", the javascript space character
		//result will be several lines of text with the tray information
		//put this into an array
		//get trays
		var strTrays = strHTML.match(/Media.*[\s\S]*\<\/table\>/gm)[0];
		var strTraysNoTags = strTrays.replace(/\>/g,'>\n')
			.replace(/\<.*\>/g,'')
			.replace(/\n+/g,'\n')
			.replace(/\&nbsp;/g,'');
		var aryTrays = strTraysNoTags.split('\n');
		var trays = [];

		//iterate through the array of tray information
		for (var i=0; i<aryTrays.length; i++) {
			var line = aryTrays[i];

			//if the element of the array contains "Tray #"
			//the following three elements will be status, size, and type
			if (line.match(/^Tray\s\d+/)) {
				trays.push({
					name:aryTrays[i],
					status:aryTrays[i+1],
					size:aryTrays[i+2],
					type:aryTrays[i+3]
				});
			}
		}
		
		//create a jQuery DIV element to contain the printer status information
		var divDeviceStatus = $("<div>")
			.css('margin','3px')
			.css('padding','2px')
			;
					
		//create a jQuery Table element to format/arrange the status information
		var table =	$("<table>")
			.attr('width','100%')
			.attr('cellspacing','0')
			.css('border','solid 2px black')
			;
		var tr1 = $("<tr>");
		tr1.append("<td><b>"+printer.name+"</b></td>");
		
		//add current status
		//change color based on status
		var tdCurrentStatus = $("<td>").html("Status: "+currentStatus)

		//parse text of the current status
		//if it contains jam/'load tray 1'/error/open, decrement status value by 3
		//this ensures that these statuses will put the printer in Urgent state
		//other than that, it's fine
		if (currentStatus.match(/(jam)|(load\ tray\ 1)|(error)|(open)/i)) {
			tdCurrentStatus.css('backgroundColor','red');
			statusValue -= 3;
		} else if (currentStatus.match(/(ready)/i)) {
			tdCurrentStatus.css('backgroundColor','green');
		} else {
			tdCurrentStatus.css('backgroundColor','orange');
			statusValue += 0.2;
		}
		tr1.append(tdCurrentStatus);
		
		//add current toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var tdCurrentToner = $("<td>").html("Toner: "+currentToner);
		if (currentToner == "N/A") {	
			tdCurrentToner.css('backgroundColor','orange');
			statusValue += 0.0;
		} else if (Number(currentToner.match(/\d+/)[0]) < 1) {
			tdCurrentToner.css('backgroundColor','red');
			statusValue -= 3;
		} else if (Number(currentToner.match(/\d+/)[0]) < 10) {
			tdCurrentToner.css('backgroundColor','orange');
			statusValue += 0.3;
		} else {
			tdCurrentToner.css('backgroundColor','green');
			statusValue += 1;
		}
		tr1.append(tdCurrentToner);

		//add current mainteance kit
		//change color based on status
		//less than 1% will increment status value by 0.2
		//otherwise, increment status value by 0.5
		var tdCurrentMaintenance = $("<td>").html("Maintenance Kit: "+currentMaintenance);
		if (currentMaintenance == "N/A") {
			tdCurrentMaintenance.css('backgroundColor','orange');
			statusValue += 0.5;
		} else if (Number(currentMaintenance.match(/\d+/)[0]) < 5) {
			tdCurrentMaintenance.css('backgroundColor','orange');
			statusValue += 0.3;
		} else {
			tdCurrentMaintenance.css('backgroundColor','green');
			statusValue += 0.5;
		}
		tr1.append(tdCurrentMaintenance);
				
		//add link to go to status page
		tr1.append($("<td>").html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>Status Page</a>"));
		
		table.append(tr1);

		//iterate through trays
		//keep track of total tray count, if Tray 1 exists, decrement tray count by 1
		//if tray status reads "OK" increment status value by (1/trayCount)
		//	if all trays that are not Tray 1 are OK, status value will increase by 1.0
		//if tray status has numbers in it
		//	parse out the number
		//		if it's 40,  increment status value by (1/trayCount), make it green
		//		if it's 10, make it orange, don't increment status value
		var tr2 = $("<tr>");
		var trayCount = trays.length;
		for (var i=0; i<trays.length; i++) {
			var tray = trays[i];
			var td = $("<td>").html(tray.name + ": " + tray.status);

			if (tray.name.match(/tray\s1/i)) {
				trayCount--;
			} else {
				if (tray.status.match(/ok/i)) {
					td.css('backgroundColor','green');
					statusValue += 1/trayCount;
				} else if (tray.status.match(/\d+/)) {
					if (Number(tray.status.match(/\d+/)[0]) >= 40) {
						td.css('backgroundColor','green');
						statusValue += 1/trayCount;						
					} else if (Number(tray.status.match(/\d+/)[0]) >= 10) {
						td.css('backgroundColor','orange');
					
					} else {
						td.css('backgroundColor','red');
					}
				} else {
					td.css('backgroundColor','red');
				}
			}
				
			
			tr2.append(td);
		}

		// Displays the status value, integer for determing which category to place printer in
		// Uncomment for testing/debugging
		//tr2.append("<td>"+Math.floor(statusValue)+"</td>");
				
		//add a link to the log for the ARC printer
		if (printer.nameShort == "ARC")
			tr2.append("<td><a href=\"arclog.html\">ARC Printer Log</a></td>");
		table.append(tr2);				
			
		divDeviceStatus.append(table);
				
		//make a jQuery POST call to arclog.php
		//this will take the most recent ARC printer status and log it
		if (printer.nameShort == "ARC") {
			$.post("arclog.php?rnd="+Math.random(),{arcLogEntry:table.html()}, function(data) {
				if (data)
					alert(data);
			});
		}
				
		//remove this printer from the "no response" section
		//if there are no more printers in the "no response" section, hide it
		$("div#pending"+printer.nameShort).remove();
		var divNoResponse = $("div",$("div#noresponse"));
		if (divNoResponse.size() == 0)
			$("div#noresponse").hide();				

		//determine which category the printer should be added to by its status value
		if (Math.floor(statusValue) < 1) {
			$("div#urgent").show().append(divDeviceStatus);
			alert(printer.name + " NEEDS SERVICE IMMEDIATELY");
		} else if (Math.floor(statusValue) < 2) {
			$("div#needservice").show().append(divDeviceStatus);
		} else {
			$("div#goodservice").show().append(divDeviceStatus);
		}
	})
	.error( function() {
		//printers[i]["error"] = true;
	});
}

function fetchDeviceStatusHP4700(printer) {

	var urlDeviceStatus = "http://" + printer.ip + "/hp/device/this.LCDispatcher";
	
	//create a jQuery HTML object to be added to the "no response category"
	//this will be removed later in this function if/when printer responds to HTTP request
	var divPending = $("<div>")
		.attr('id',"pending"+printer.nameShort)
		.html(printer.name + " [<a href=\"" + urlDeviceStatus + "\">Status Page</a>]");
	$("div#noresponse").show().append(divPending);

	//jQuery call to make HTTP POST request to fetchUrl.php
	//append a random integer to querystring to prevent returning a cached version of the page
	//pass the url of the printer device status page and the printer object
	//	also another random number for the same reason
	$.post("fetchUrl.php?rnd="+Math.random(),{url:urlDeviceStatus,printer:printer,rnd:Math.random()}, function(data) { //if the printer responds to the HTTP request, this function will run
	//data is the HTML generated by the device status page by way of fetchUrl.php
		var strHTML = data;
		var statusValue = 0;
				
		//parse out the printer object data that's been appended to the HTML by fetchUrl.php
		var strPrinterData = strHTML.match(/\[printerData\].*\[\/printerData\]/)[0];
		strPrinterData = strPrinterData.replace(/\[\/*printerData\]/g,'');
		var printer = $.parseJSON(strPrinterData);
				
		//get the HTML data starting from a specific spot on the page
		//remove all HTML tags
		//remove all HTML comments
		//replace instances of multiple line breaks in a row with a single line break
		//create an array from this text, separating elements by line breaks
		var strForm = strHTML.match(/\<form\sid=\"deviceStatusPage\".*[\s\S]*/)[0];
		var strFormNoTags = strForm.replace(/\<.*\>/g,'')
			.replace(/\<!--.*[\s\S]*--\>/g,'')
			.replace(/\n+/g,'\n');
		var aryDeviceStatus = strFormNoTags.split('\n');
		
		//in this state, the element in position 1 will be the text of the current status
		//get status
		var currentStatus = aryDeviceStatus[1];
						
		//parse out the text "Black Cartridge...%"
		//then parse out the numbers from that string to get the black toner level
		//get black toner
		var currentBlackToner = "N/A";
		var currentBlackTonerPercentage;
		currentBlackTonerPercentage = strFormNoTags.match(/.*Black.Cartridge.*%.*\n/i);
		
		if (currentBlackTonerPercentage)
			currentBlackToner = currentBlackTonerPercentage[0].match(/\d+.*\n/)[0];
						
		//parse out the text "Cyan Cartridge...%"
		//then parse out the numbers from that string to get the cyan toner level
		//get cyan toner
//		var currentCyanToner = "N/A";
//		var currentCyanTonerPercentage;
//		currentCyanTonerPercentage = strFormNoTags.match(/.*Cyan Cartridge.*%.*\n/i);
		
//		if (currentCyanTonerPercentage)
//			currentCyanToner = currentCyanTonerPercentage[0].match(/\d+.*\n/)[0];
						
		//parse out the text "Magenta Cartridge...%"
		//then parse out the numbers from that string to get the magenta toner level
		//get Magenta toner
//		var currentMagentaToner = "N/A";
//		var currentMagentaTonerPercentage;
//		currentMagentaTonerPercentage = strFormNoTags.match(/.*Magenta Cartridge.*%.*\n/i);
		
//		if (currentMagentaTonerPercentage)
//			currentMagentaToner = currentMagentaTonerPercentage[0].match(/\d+.*\n/)[0];
						
		//parse out the text "Yellow Cartridge...%"
		//then parse out the numbers from that string to get the yellow toner level
		//get yellow toner
//		var currentYellowToner = "N/A";
//		var currentYellowTonerPercentage;
//		currentYellowTonerPercentage = strFormNoTags.match(/.*Yellow Cartridge.*%.*\n/i);
		
//		if (currentYellowTonerPercentage)
//			currentYellowToner = currentYellowTonerPercentage[0].match(/\d+.*\n/)[0];

		//parse out the text "Image Transfer Kit...%"
		//then parse out the numbers from that string to get the image transfer kit level
		//get image transfer kit
//		var strCurrentIMT = strFormNoTags.match(/.*Image Transfer\sKit.*%.*\n/);
//		if (strCurrentIMT)
//			var currentImageTransfer = strFormNoTags.match(/.*Image Transfer\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
//		else
//			var currentImageTransfer = "N/A";

		//parse out the text "Image Fuser Kit...%"
		//then parse out the numbers from that string to get the image fuser kit level
		//get image fuser kit
//		var strCurrentIFK = strFormNoTags.match(/.*Image Fuser\sKit.*%.*\n/);
//		if (strCurrentIFM)
//			var currentImageFuser = strFormNoTags.match(/.*Image Fuser\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
//		else
//			var currentImageFuser = "N/A";
		
		//get a chunk of the text that starts with "Media" and ends in "</table>"
		//replace ">" with ">" followed by a line break
		//remove all HTML tags
		//replace instances of multiple line breaks in a row with a single line break
		//remove all instances of "&nbsp;", the javascript space character
		//result will be several lines of text with the tray information
		//put this into an array
		//get trays
		var strTrays = strHTML.match(/Media.*[\s\S]*\<\/table\>/gm)[0];
		var strTraysNoTags = strTrays.replace(/\>/g,'>\n')
			.replace(/\<.*\>/g,'')
			.replace(/\n+/g,'\n')
			.replace(/\&nbsp;/g,'');
		var aryTrays = strTraysNoTags.split('\n');
		var trays = [];

		//iterate through the array of tray information
		for (var i=0; i<aryTrays.length; i++) {
			var line = aryTrays[i];

			//if the element of the array contains "Tray #"
			//the following three elements will be status, size, and type
			if (line.match(/^Tray\s\d+/)) {
				trays.push({
					name:aryTrays[i],
					status:aryTrays[i+1],
					size:aryTrays[i+2],
					type:aryTrays[i+3]
				});
			}
		}
		
		//create a jQuery DIV element to contain the printer status information
		var divDeviceStatus = $("<div>")
			.css('margin','3px')
			.css('padding','2px')
			;
					
		//create a jQuery Table element to format/arrange the status information
		var table =	$("<table>")
			.attr('width','100%')
			.attr('cellspacing','0')
			.css('border','solid 2px black')
			;
		var tr1 = $("<tr>");
		tr1.append("<td><b>"+printer.name+"</b></td>");
		
		//add current status
		//change color based on status
		var tdCurrentStatus = $("<td>").html("Status: "+currentStatus)

		//parse text of the current status
		//if it contains jam/'load tray 1'/error/open, decrement status value by 3
		//this ensures that these statuses will put the printer in Urgent state
		//other than that, it's fine
		if (currentStatus.match(/(jam)|(load\ tray\ 1)|(error)|(open)/i)) {
			tdCurrentStatus.css('backgroundColor','red');
			statusValue -= 3;
		} else if (currentStatus.match(/(ready)/i)) {
			tdCurrentStatus.css('backgroundColor','green');
		} else {
			tdCurrentStatus.css('backgroundColor','orange');
			statusValue += 0.2;
		}
		tr1.append(tdCurrentStatus);
		
		//add current black toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var tdCurrentBlackToner = $("<td>").html("Black Toner: "+currentBlackToner);
		if (currentToner == "N/A") {	
			tdCurrentBlackToner.css('backgroundColor','orange');
			statusValue += 0.0;
		} else if (Number(currentBlackToner.match(/\d+/)[0]) < 1) {
			tdCurrentBlackToner.css('backgroundColor','red');
			statusValue -= 3;
		} else if (Number(currentBlackToner.match(/\d+/)[0]) < 5) {
			tdCurrentBlackToner.css('backgroundColor','orange');
			statusValue += 0.3;
		} else {
			tdCurrentBlackToner.css('backgroundColor','green');
			statusValue += 1;
		}
		tr1.append(tdCurrentBlackToner);
		
		//add current cyan toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
//		var tdCurrentCyanToner = $("<td>").html("Cyan Toner: "+currentCyanToner);
//		if (currentToner == "N/A") {	
//			tdCurrentCyanToner.css('backgroundColor','orange');
//			statusValue += 0.0;
//		} else if (Number(currentCyanToner.match(/\d+/)[0]) < 1) {
//			tdCurrentCyanToner.css('backgroundColor','red');
//			statusValue -= 3;
//		} else if (Number(currentCyanToner.match(/\d+/)[0]) < 5) {
//			tdCurrentCyanToner.css('backgroundColor','orange');
//			statusValue += 0.3;
//		} else {
//			tdCurrentCyanToner.css('backgroundColor','green');
//			statusValue += 1;
//		}
//		tr1.append(tdCurrentCyanToner);
		
		//add current magenta toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
//		var tdCurrentMagentaToner = $("<td>").html("Magenta Toner: "+currentMagentaToner);
//		if (currentToner == "N/A") {	
//			tdCurrentMagentaToner.css('backgroundColor','orange');
//			statusValue += 0.0;
//		} else if (Number(currentMagentaToner.match(/\d+/)[0]) < 1) {
//			tdCurrentMagentaToner.css('backgroundColor','red');
//			statusValue -= 3;
//		} else if (Number(currentMagentaToner.match(/\d+/)[0]) < 5) {
//			tdCurrentMagentaToner.css('backgroundColor','orange');
//			statusValue += 0.3;
//		} else {
//			tdCurrentMagentaToner.css('backgroundColor','green');
//			statusValue += 1;
//		}
//		tr1.append(tdCurrentMagentaToner);
		
		//add current yellow toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
//		var tdCurrentYellowToner = $("<td>").html("Yellow Toner: "+currentYellowToner);
//		if (currentToner == "N/A") {	
//			tdCurrentYellowToner.css('backgroundColor','orange');
//			statusValue += 0.0;
//		} else if (Number(currentYellowToner.match(/\d+/)[0]) < 1) {
//			tdCurrentYellowToner.css('backgroundColor','red');
//			statusValue -= 3;
//		} else if (Number(currentYellowToner.match(/\d+/)[0]) < 5) {
//			tdCurrentYellowToner.css('backgroundColor','orange');
//			statusValue += 0.3;
//		} else {
//			tdCurrentYellowToner.css('backgroundColor','green');
//			statusValue += 1;
//		}
//		tr1.append(tdCurrentYellowToner);

		//add current image transfer kit
		//change color based on status
		//less than 1% will increment status value by 0.2
		//otherwise, increment status value by 0.5
//		var tdCurrentImageTransfer = $("<td>").html("Image Transfer Kit: "+currentImageTransfer);
//		if (currentImageTransfer == "N/A") {
//			tdCurrentImageTransfer.css('backgroundColor','orange');
//			statusValue += 0.5;
//		} else if (Number(currentImageTransfer.match(/\d+/)[0]) < 5) {
//			tdCurrentImageTransfer.css('backgroundColor','orange');
//			statusValue += 0.2;
//		} else {
//			tdCurrentImageTransfer.css('backgroundColor','green');
//			statusValue += 0.5;
//		}
//		tr1.append(tdCurrentImageTransfer);

		//add current image fuser kit
		//change color based on status
		//less than 1% will increment status value by 0.2
		//otherwise, increment status value by 0.5
//		var tdCurrentImageFuser = $("<td>").html("Image Fuser Kit: "+currentImageFuser);
//		if (currentImageFuser == "N/A") {
//			tdCurrentImageFuser.css('backgroundColor','orange');
//			statusValue += 0.5;
//		} else if (Number(currentImageFuser.match(/\d+/)[0]) < 5) {
//			tdCurrentImageFuser.css('backgroundColor','orange');
//			statusValue += 0.2;
//		} else {
//			tdCurrentImageFuser.css('backgroundColor','green');
//			statusValue += 0.5;
//		}
//		tr1.append(tdCurrentImageFuser);
				
		//add link to go to status page
		tr1.append($("<td>").html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>Status Page</a>"));
		
		table.append(tr1);

		//iterate through trays
		//keep track of total tray count, if Tray 1 exists, decrement tray count by 1
		//if tray status reads "OK" increment status value by (1/trayCount)
		//	if all trays that are not Tray 1 are OK, status value will increase by 1.0
		//if tray status has numbers in it
		//	parse out the number
		//		if it's 40,  increment status value by (1/trayCount), make it green
		//		if it's 10, make it orange, don't increment status value
		var tr2 = $("<tr>");
		var trayCount = trays.length;
		for (var i=0; i<trays.length; i++) {
			var tray = trays[i];
			var td = $("<td>").html(tray.name + ": " + tray.status);

			if (tray.name.match(/tray\s1/i)) {
				trayCount--;
			} else {
				if (tray.status.match(/ok/i)) {
					td.css('backgroundColor','green');
					statusValue += 1/trayCount;
				} else if (tray.status.match(/\d+/)) {
					if (Number(tray.status.match(/\d+/)[0]) >= 40) {
						td.css('backgroundColor','green');
						statusValue += 1/trayCount;						
					} else if (Number(tray.status.match(/\d+/)[0]) >= 10) {
						td.css('backgroundColor','orange');
					
					} else {
						td.css('backgroundColor','red');
					}
				} else {
					td.css('backgroundColor','red');
				}
			}
				
			
			tr2.append(td);
		}

		// Displays the status value, integer for determing which category to place printer in
		// Uncomment for testing/debugging
		//tr2.append("<td>"+Math.floor(statusValue)+"</td>");
				
		//add a link to the log for the ARC printer
		if (printer.nameShort == "ARC")
			tr2.append("<td><a href=\"arclog.html\">ARC Printer Log</a></td>");
		table.append(tr2);				
			
		divDeviceStatus.append(table);
				
		//make a jQuery POST call to arclog.php
		//this will take the most recent ARC printer status and log it
		if (printer.nameShort == "ARC") {
			$.post("arclog.php?rnd="+Math.random(),{arcLogEntry:table.html()}, function(data) {
				if (data)
					alert(data);
			});
		}
				
		//remove this printer from the "no response" section
		//if there are no more printers in the "no response" section, hide it
		$("div#pending"+printer.nameShort).remove();
		var divNoResponse = $("div",$("div#noresponse"));
		if (divNoResponse.size() == 0)
			$("div#noresponse").hide();				

		//determine which category the printer should be added to by its status value
		if (Math.floor(statusValue) < 1) {
			$("div#urgent").show().append(divDeviceStatus);
			alert(printer.name + " NEEDS SERVICE IMMEDIATELY");
		} else if (Math.floor(statusValue) < 2) {
			$("div#needservice").show().append(divDeviceStatus);
		} else {
			$("div#goodservice").show().append(divDeviceStatus);
		}
	})
	.error( function() {
		//printers[i]["error"] = true;
	});
}
