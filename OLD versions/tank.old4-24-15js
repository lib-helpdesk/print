var refreshInterval = 1000*60; //time in milliseconds
var timeLeft = refreshInterval / 1000; //variable for keeping track of the countdown

$(function() { //onload, runs when page finishes loading
	fetchDeviceStatus();
	var intervalRefresh = setInterval("fetchDeviceStatus()",refreshInterval);
	var intervalTimer = setInterval("updateTimer()",1000);
});

//decrements timeLeft by 1, stops at 0
//updates the refresh indicator text
function updateTimer() {
	timeLeft = Math.max(timeLeft-1,0);
	$("div#refresh").html("This page will refresh in " + timeLeft + " seconds");	
}

//updates printer statuses
//pings each printer's device status page, parses text out of html
//places html object into appropriate category
function fetchDeviceStatus() {
	timeLeft = refreshInterval / 1000;

	$("div#noresponse").hide();
	$("div#urgent div").remove();
	$("div#noresponse div").remove();
	$("div#needservice div").remove();
	$("div#goodservice div").remove();
	
	//iterate through printers
	//printers defined in printers.js
	for (var i=0; i<printers.length; i++) {
		var printer = printers[i];
		if ((printer.type == "HP9050") || (printer.type == "HP4515")) {
			fetchDeviceStatusHP9050(printer);
		} else if (printer.type == "HPM806") {
			fetchDeviceStatusHPM806(printer);	
		} else if (printer.type == "HP4700") {
			fetchDeviceStatusHP4700(printer);
		}

	}

			
	for (var i=0; i<printers.length; i++) {
		if (printers[i]["error"])
			alert('error logged');
	}
}

function fetchDeviceStatusHP9050(printer) {

	var urlDeviceStatus = "http://" + printer.ip + "/hp/device/this.LCDispatcher";
	
	//create a jQuery HTML object to be added to the "no response category"
	//this will be removed later in this function if/when printer responds to HTTP request
	var divPending = $("<div>")
		.attr('class',"printerBox pending"+printer.nameShort)
		;
		
	//Printer Name
	var printerName = $("<div>")
		.attr('class','printerTitle')
		.html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>"+printer.name+"</a>")
		;
	divPending.append(printerName);
		
	//Printer Status Page
	var printerStatus = $("<div>")
		.attr('class','cell')
		.html("[<a href=\"" + urlDeviceStatus + "\">Status Page</a>]")
		;
	divPending.append(printerStatus);
	
	$("div#noresponse").show().append(divPending);

	//jQuery call to make HTTP POST request to fetchUrl.php
	//append a random integer to querystring to prevent returning a cached version of the page
	//pass the url of the printer device status page and the printer object
	//	also another random number for the same reason
	$.post("fetchUrl.php?rnd="+Math.random(),{url:urlDeviceStatus,printer:printer,rnd:Math.random()}, function(data) { //if the printer responds to the HTTP request, this function will run
	//data is the HTML generated by the device status page by way of fetchUrl.php
		var strHTML = data;
		var statusValue = 0;
				
		//parse out the printer object data that's been appended to the HTML by fetchUrl.php
		var strPrinterData = strHTML.match(/\[printerData\].*\[\/printerData\]/)[0];
		strPrinterData = strPrinterData.replace(/\[\/*printerData\]/g,'');
		var printer = $.parseJSON(strPrinterData);
				
		//get the HTML data starting from a specific spot on the page
		//remove all HTML tags
		//remove all HTML comments
		//replace instances of multiple line breaks in a row with a single line break
		//create an array from this text, separating elements by line breaks
		var strForm = strHTML.match(/\<form\sid=\"deviceStatusPage\".*[\s\S]*/)[0];
		var strFormNoTags = strForm.replace(/\<.*\>/g,'')
			.replace(/\<!--.*[\s\S]*--\>/g,'')
			.replace(/\n+/g,'\n');
		var aryDeviceStatus = strFormNoTags.split('\n');
		
		//in this state, the element in position 1 will be the text of the current status
		//get status
		var currentStatus = aryDeviceStatus[1];
						
		//parse out the text "Cartridge...%"
		//then parse out the numbers from that string to get the toner level
		//get toner
		var currentToner = "N/A";
		var currentTonerPercentage;
		currentTonerPercentage = strFormNoTags.match(/.*Cartridge.*%.*\n/i);
		
		if (currentTonerPercentage)
			currentToner = currentTonerPercentage[0].match(/\d+.*\n/)[0];				

		//parse out the text "Maintenance Kit...%"
		//then parse out the numbers from that string to get the maintenance kit level
		//get maintenance
		var strCurrentMK = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/);
		if (strCurrentMK)
			var currentMaintenance = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
		else
			var currentMaintenance = "N/A";
		
		//get a chunk of the text that starts with "Media" and ends in "</table>"
		//replace ">" with ">" followed by a line break
		//remove all HTML tags
		//replace instances of multiple line breaks in a row with a single line break
		//remove all instances of "&nbsp;", the javascript space character
		//result will be several lines of text with the tray information
		//put this into an array
		//get trays
		var strTrays = strHTML.match(/Media.*[\s\S]*\<\/table\>/gm)[0];
		var strTraysNoTags = strTrays.replace(/\>/g,'>\n')
			.replace(/\<.*\>/g,'')
			.replace(/\n+/g,'\n')
			.replace(/\&nbsp;/g,'');
		var aryTrays = strTraysNoTags.split('\n');
		var trays = [];

		//iterate through the array of tray information
		for (var i=0; i<aryTrays.length; i++) {
			var line = aryTrays[i];

			//if the element of the array contains "Tray #"
			//the following three elements will be status, size, and type
			if (line.match(/^Tray\s\d+/)) {
				trays.push({
					name:aryTrays[i],
					status:aryTrays[i+1],
					size:aryTrays[i+2],
					type:aryTrays[i+3]
				});
			}
		}
		
		//create a jQuery printerBox element to format/arrange the status information
		var printerBox = $("<div>").attr('class','printerBox');
		
		//Printer Name
		var printerName = $("<div>")
			.attr('class','printerTitle')
			.html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>"+printer.name+"</a>")
			;
		printerBox.append(printerName);
		
		//add current status
		//change color based on status
		var divCurrentStatus = $("<div>")
			.attr('class','cell')
			.html("Status: "+currentStatus);

		//parse text of the current status
		//if it contains jam/'load tray 1'/error/open, decrement status value by 3
		//this ensures that these statuses will put the printer in Urgent state
		//other than that, it's fine
		if (currentStatus.match(/(jam)|(load\ tray\ 1)|(error)|(open)|(CLOSE\ FRONT\ OR\ LEFT\ DOOR)/i)) {
			divCurrentStatus.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (currentStatus.match(/(ready)/i)) {
			divCurrentStatus.css('borderLeftColor','green');
		} else {
			divCurrentStatus.css('borderLeftColor','orange');
			statusValue += 0.2;
		}
		printerBox.append(divCurrentStatus);
		
		//Toner & Maintenance
		var divTNM = $("<div>")
			.attr('class','cellTitle')
			.html("Toner &amp; Maintenance")
		;
		printerBox.append(divTNM);
		
		//add current toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentToner = $("<div>")
			.attr('class','cell')
			.html("Toner: "+currentToner)
		;		
		if (currentToner == "N/A") {	
			divCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentToner.match(/\d+/)[0]) < 1) {
			divCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentToner.match(/\d+/)[0]) < 10) {
			divCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentToner);
		
		//add current mainteance kit
		//change color based on status
		//less than 5% will decrease status value by 0.5
		//otherwise, increment status value by 0.5
		var divCurrentMaintenance = $("<div>")
			.attr('class','cell')
			.html("Maintenance Kit: "+currentMaintenance)
			;
		if (currentMaintenance == "N/A") {
			divCurrentMaintenance.css('borderLeftColor','orange');
			statusValue += 0.5;
		} else if (Number(currentMaintenance.match(/\d+/)[0]) < 5) {
			divCurrentMaintenance.css('borderLeftColor','orange');
			statusValue -= 0.5;
		} else {
			divCurrentMaintenance.css('borderLeftColor','green');
			statusValue += 0.5;
		}
		printerBox.append(divCurrentMaintenance);
		
		// Paper Trays
		var divPT = $("<div>")
			.attr('class','cellTitle')
			.html("Paper Trays")
		;
		printerBox.append(divPT);
		
		//iterate through trays
		//keep track of total tray count, if Tray 1 exists, decrement tray count by 1
		//if tray status reads "OK" increment status value by (1/trayCount)
		//	if all trays that are not Tray 1 are OK, status value will increase by 1.0
		//if tray status has numbers in it
		//	parse out the number
		//		if it's 40,  increment status value by (1/trayCount), make it green
		//		if it's 10, make it orange, don't increment status value
		var trayCount = trays.length;
		for (var i=0; i<trays.length; i++) {
			var tray = trays[i];
			var divTray = $("<div>")
				.attr('class','cell')
				.html(tray.name + ": " + tray.status)
				;

			if (tray.name.match(/tray\s1/i)) {
				trayCount--;
			} else {
				if (tray.status.match(/ok/i)) {
					divTray.css('borderLeftColor','green');
					statusValue += 1/trayCount;
				} else if (tray.status.match(/\d+/)) {
					if (Number(tray.status.match(/\d+/)[0]) >= 40) {
						divTray.css('borderLeftColor','green');
						statusValue += 1/trayCount;						
					} else if (Number(tray.status.match(/\d+/)[0]) >= 10) {
						divTray.css('borderLeftColor','orange');
					
					} else {
						divTray.css('borderLeftColor','red');
					}
				} else {
					divTray.css('borderLeftColor','red');
				}
			}
				
			
			printerBox.append(divTray);
		}
		
		// Displays the status value, integer for determing which category to place printer in
		// Uncomment for testing/debugging
		//divMathFloor = $("<div>")
		//	.attr('class','cell')
		//	.html(Math.floor(statusValue))
		//	;
		//printerBox.append(divMathFloor);
		
		//remove this printer from the "no response" section
		//if there are no more printers in the "no response" section, hide it
		$("div.pending"+printer.nameShort).remove();
		var divNoResponse = $("div",$("div#noresponse"));
		if (divNoResponse.size() == 0)
			$("div#noresponse").hide();				

		//determine which category the printer should be added to by its status value
		if (Math.floor(statusValue) < 1) {
			$("div#urgent").show().append(printerBox);
			alert(printer.name + " NEEDS SERVICE IMMEDIATELY");
		} else if (Math.floor(statusValue) < 2) {
			$("div#needservice").show().append(printerBox);
		} else {
			$("div#goodservice").show().append(printerBox);
		}
	})
	.error( function() {
		//printers[i]["error"] = true;
	});

}

function fetchDeviceStatusHPM806(printer) {

	var urlDeviceStatus = "http://" + printer.ip + "/hp/device/DeviceStatus/Index";
	
	//create a jQuery HTML object to be added to the "no response category"
	//this will be removed later in this function if/when printer responds to HTTP request
	var divPending = $("<div>")
		.attr('class',"printerBox pending"+printer.nameShort)
		;
		
	//Printer Name
	var printerName = $("<div>")
		.attr('class','printerTitle')
		.html("<a href=\"http://" + printer.ip + "/hp/device/DeviceStatus/Index\" target='_new'>"+printer.name+"</a>")
		;
	divPending.append(printerName);
		
	//Printer Status Page
	var printerStatus = $("<div>")
		.attr('class','cell')
		.html("[<a href=\"" + urlDeviceStatus + "\">Status Page</a>]")
		;
	divPending.append(printerStatus);
	
	$("div#noresponse").show().append(divPending);

	//jQuery call to make HTTP POST request to fetchUrl.php
	//append a random integer to querystring to prevent returning a cached version of the page
	//pass the url of the printer device status page and the printer object
	//	also another random number for the same reason
	$.post("fetchUrl.php?rnd="+Math.random(),{url:urlDeviceStatus,printer:printer,rnd:Math.random()}, function(data) { //if the printer responds to the HTTP request, this function will run
	//data is the HTML generated by the device status page by way of fetchUrl.php
		var strHTML = data;
		var statusValue = 0;
				
		//parse out the printer object data that's been appended to the HTML by fetchUrl.php
		var strPrinterData = strHTML.match(/\[printerData\].*\[\/printerData\]/)[0];
		strPrinterData = strPrinterData.replace(/\[\/*printerData\]/g,'');
		var printer = $.parseJSON(strPrinterData);
				
		//get the HTML data starting from a specific spot on the page
		//remove all HTML tags
		//remove all HTML comments
		//replace instances of multiple line breaks in a row with a single line break
		//create an array from this text, separating elements by line breaks
		var strForm = strHTML.match(/\<form.*[\s\S]*/)[0];
		var strFormNoTags = strForm.replace(/\<.*\>/g,'')
			.replace(/\<!--.*[\s\S]*--\>/g,'')
			.replace(/\n+/g,'\n');
		var aryDeviceStatus = strFormNoTags.split('\n');
		
		//in this state, the element in position 1 will be the text of the current status
		//get status
		var currentStatus = aryDeviceStatus[1];
						
		//parse out the text "Cartridge...%"
		//then parse out the numbers from that string to get the toner level
		//get toner
		var currentToner = "N/A";
		var currentTonerPercentage;
		currentTonerPercentage = strFormNoTags.match(/.*Cartridge.*%.*\n/i);
		
		if (currentTonerPercentage)
			currentToner = currentTonerPercentage[0].match(/\d+.*\n/)[0];				

		//parse out the text "Maintenance Kit...%"
		//then parse out the numbers from that string to get the maintenance kit level
		//get maintenance
		var strCurrentMK = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/);
		if (strCurrentMK)
			var currentMaintenance = strFormNoTags.match(/.*Maintenance\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
		else
			var currentMaintenance = "N/A";
		
		//get a chunk of the text that starts with "Media" and ends in "</table>"
		//replace ">" with ">" followed by a line break
		//remove all HTML tags
		//replace instances of multiple line breaks in a row with a single line break
		//remove all instances of "&nbsp;", the javascript space character
		//result will be several lines of text with the tray information
		//put this into an array
		//get trays
		var strTrays = strHTML.match(/Media.*[\s\S]*\<\/table\>/gm)[0];
		var strTraysNoTags = strTrays.replace(/\>/g,'>\n')
			.replace(/\<.*\>/g,'')
			.replace(/\n+/g,'\n')
			.replace(/\&nbsp;/g,'');
		var aryTrays = strTraysNoTags.split('\n');
		var trays = [];

		//iterate through the array of tray information
		for (var i=0; i<aryTrays.length; i++) {
			var line = aryTrays[i];

			//if the element of the array contains "Tray #"
			//the following three elements will be status, size, and type
			if (line.match(/^Tray\s\d+/)) {
				trays.push({
					name:aryTrays[i],
					status:aryTrays[i+1],
					capacity:aryTrays[i+2],
					size:aryTrays[i+3],
					type:aryTrays[i+4]
				});
			}
		}
		
		//create a jQuery printerBox element to format/arrange the status information
		var printerBox = $("<div>").attr('class','printerBox');
		
		//Printer Name
		var printerName = $("<div>")
			.attr('class','printerTitle')
			.html("<a href=\"http://" + printer.ip + "/hp/device/DeviceStatus/Index\" target='_new'>"+printer.name+"</a>")
			;
		printerBox.append(printerName);
		
		//add current status
		//change color based on status
		var divCurrentStatus = $("<div>")
			.attr('class','cell')
			.html("Status: "+currentStatus);

		//parse text of the current status
		//if it contains jam/'load tray 1'/error/open, decrement status value by 3
		//this ensures that these statuses will put the printer in Urgent state
		//other than that, it's fine
		if (currentStatus.match(/(jam)|(load\ tray\ 1)|(error)|(open)|(CLOSE\ FRONT\ OR\ LEFT\ DOOR)/i)) {
			divCurrentStatus.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (currentStatus.match(/(ready)/i)) {
			divCurrentStatus.css('borderLeftColor','green');
		} else {
			divCurrentStatus.css('borderLeftColor','orange');
			statusValue += 0.2;
		}
		printerBox.append(divCurrentStatus);
		
		//Toner & Maintenance
		var divTNM = $("<div>")
			.attr('class','cellTitle')
			.html("Toner &amp; Maintenance")
		;
		printerBox.append(divTNM);
		
		//add current toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentToner = $("<div>")
			.attr('class','cell')
			.html("Toner: "+currentToner)
		;		
		if (currentToner == "N/A") {	
			divCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentToner.match(/\d+/)[0]) < 1) {
			divCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentToner.match(/\d+/)[0]) < 10) {
			divCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentToner);
		
		//add current mainteance kit
		//change color based on status
		//less than 5% will decrease status value by 0.5
		//otherwise, increment status value by 0.5
		var divCurrentMaintenance = $("<div>")
			.attr('class','cell')
			.html("Maintenance Kit: "+currentMaintenance)
			;
		if (currentMaintenance == "N/A") {
			divCurrentMaintenance.css('borderLeftColor','orange');
			statusValue += 0.5;
		} else if (Number(currentMaintenance.match(/\d+/)[0]) < 5) {
			divCurrentMaintenance.css('borderLeftColor','orange');
			statusValue -= 0.5;
		} else {
			divCurrentMaintenance.css('borderLeftColor','green');
			statusValue += 0.5;
		}
		printerBox.append(divCurrentMaintenance);
		
		// Paper Trays
		var divPT = $("<div>")
			.attr('class','cellTitle')
			.html("Paper Trays")
		;
		printerBox.append(divPT);
		
		//iterate through trays
		//keep track of total tray count, if Tray 1 exists, decrement tray count by 1
		//if tray status reads "OK" increment status value by (1/trayCount)
		//	if all trays that are not Tray 1 are OK, status value will increase by 1.0
		//if tray status has numbers in it
		//	parse out the number
		//		if it's 40,  increment status value by (1/trayCount), make it green
		//		if it's 10, make it orange, don't increment status value
		var trayCount = trays.length;
		for (var i=0; i<trays.length; i++) {
			var tray = trays[i];
			var divTray = $("<div>")
				.attr('class','cell')
				.html(tray.name + ": " + tray.status)
				;

			if (tray.name.match(/tray\s1/i)) {
				trayCount--;
			} else {
				if (tray.status.match(/ok/i)) {
					divTray.css('borderLeftColor','green');
					statusValue += 1/trayCount;
				} else if (tray.status.match(/\d+/)) {
					if (Number(tray.status.match(/\d+/)[0]) >= 40) {
						divTray.css('borderLeftColor','green');
						statusValue += 1/trayCount;						
					} else if (Number(tray.status.match(/\d+/)[0]) >= 10) {
						divTray.css('borderLeftColor','orange');
					
					} else {
						divTray.css('borderLeftColor','red');
					}
				} else {
					divTray.css('borderLeftColor','red');
				}
			}
				
			
			printerBox.append(divTray);
		}
		
		// Displays the status value, integer for determing which category to place printer in
		// Uncomment for testing/debugging
		//divMathFloor = $("<div>")
		//	.attr('class','cell')
		//	.html(Math.floor(statusValue))
		//	;
		//printerBox.append(divMathFloor);
		
		//remove this printer from the "no response" section
		//if there are no more printers in the "no response" section, hide it
		$("div.pending"+printer.nameShort).remove();
		var divNoResponse = $("div",$("div#noresponse"));
		if (divNoResponse.size() == 0)
			$("div#noresponse").hide();				

		//determine which category the printer should be added to by its status value
		if (Math.floor(statusValue) < 1) {
			$("div#urgent").show().append(printerBox);
			alert(printer.name + " NEEDS SERVICE IMMEDIATELY");
		} else if (Math.floor(statusValue) < 2) {
			$("div#needservice").show().append(printerBox);
		} else {
			$("div#goodservice").show().append(printerBox);
		}
	})
	.error( function() {
		//printers[i]["error"] = true;
	});

}

function fetchDeviceStatusHP4700(printer) {

	var urlDeviceStatus = "http://" + printer.ip + "/hp/device/this.LCDispatcher";
	
	//create a jQuery HTML object to be added to the "no response category"
	//this will be removed later in this function if/when printer responds to HTTP request
	var divPending = $("<div>")
		.attr('class',"printerBox pending"+printer.nameShort)
		;
		
	//Printer Name
	var printerName = $("<div>")
		.attr('class','printerTitle')
		.html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>"+printer.name+"</a>")
		;
	divPending.append(printerName);
		
	//Printer Status Page
	var printerStatus = $("<div>")
		.attr('class','cell')
		.html("[<a href=\"" + urlDeviceStatus + "\">Status Page</a>]")
		;
	divPending.append(printerStatus);
	
	$("div#noresponse").show().append(divPending);

	//jQuery call to make HTTP POST request to fetchUrl.php
	//append a random integer to querystring to prevent returning a cached version of the page
	//pass the url of the printer device status page and the printer object
	//	also another random number for the same reason
	$.post("fetchUrl.php?rnd="+Math.random(),{url:urlDeviceStatus,printer:printer,rnd:Math.random()}, function(data) { //if the printer responds to the HTTP request, this function will run
	//data is the HTML generated by the device status page by way of fetchUrl.php
		var strHTML = data;
		var statusValue = 0;
				
		//parse out the printer object data that's been appended to the HTML by fetchUrl.php
		var strPrinterData = strHTML.match(/\[printerData\].*\[\/printerData\]/)[0];
		strPrinterData = strPrinterData.replace(/\[\/*printerData\]/g,'');
		var printer = $.parseJSON(strPrinterData);
				
		//get the HTML data starting from a specific spot on the page
		//remove all HTML tags
		//remove all HTML comments
		//replace instances of multiple line breaks in a row with a single line break
		//create an array from this text, separating elements by line breaks
		var strForm = strHTML.match(/\<form\sid=\"deviceStatusPage\".*[\s\S]*/)[0];
		var strFormNoTags = strForm.replace(/\<.*\>/g,'')
			.replace(/\<!--.*[\s\S]*--\>/g,'')
			.replace(/\n+/g,'\n');
		var aryDeviceStatus = strFormNoTags.split('\n');
		
		//in this state, the element in position 1 will be the text of the current status
		//get status
		var currentStatus = aryDeviceStatus[1];
		
		//parse out the text "Black Cartridge...%"
		//then parse out the numbers from that string to get the black toner level
		//get black toner
		var currentBlackToner = "N/A";
		var currentBlackTonerPercentage;
		currentBlackTonerPercentage = strFormNoTags.match(/.*Black\sCartridge.*%.*\n/i);
		
		if (currentBlackTonerPercentage)
			currentBlackToner = currentBlackTonerPercentage[0].match(/\d+.*\n/)[0];
		
		//parse out the text "Cyan Cartridge...%"
		//then parse out the numbers from that string to get the cyan toner level
		//get cyan toner
		var currentCyanToner = "N/A";
		var currentCyanTonerPercentage;
		currentCyanTonerPercentage = strFormNoTags.match(/.*Cyan\sCartridge.*%.*\n/i);
		
		if (currentCyanTonerPercentage)
			currentCyanToner = currentCyanTonerPercentage[0].match(/\d+.*\n/)[0];
		
		//parse out the text "Magenta Cartridge...%"
		//then parse out the numbers from that string to get the magenta toner level
		//get magenta toner
		var currentMagentaToner = "N/A";
		var currentMagentaTonerPercentage;
		currentMagentaTonerPercentage = strFormNoTags.match(/.*Magenta\sCartridge.*%.*\n/i);
		
		if (currentMagentaTonerPercentage)
			currentMagentaToner = currentMagentaTonerPercentage[0].match(/\d+.*\n/)[0];
		
		//parse out the text "Yellow Cartridge...%"
		//then parse out the numbers from that string to get the yellow toner level
		//get yellow toner
		var currentYellowToner = "N/A";
		var currentYellowTonerPercentage;
		currentYellowTonerPercentage = strFormNoTags.match(/.*Yellow\sCartridge.*%.*\n/i);
		
		if (currentYellowTonerPercentage)
			currentYellowToner = currentYellowTonerPercentage[0].match(/\d+.*\n/)[0];

		//parse out the text "Image Transfer Kit...%"
		//then parse out the numbers from that string to get the image transfer kit level
		//get image transfer
		var strCurrentITK = strFormNoTags.match(/.*Image\sTransfer\sKit.*%.*\n/);
		if (strCurrentITK)
			var currentImageTransfer = strFormNoTags.match(/.*Image\sTransfer\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
		else
			var currentImageTransfer = "N/A";

		//parse out the text "Image Fuser Kit...%"
		//then parse out the numbers from that string to get the image fuser kit level
		//get image fuser
		var strCurrentIFK = strFormNoTags.match(/.*Image\sFuser\sKit.*%.*\n/);
		if (strCurrentIFK)
			var currentImageFuser = strFormNoTags.match(/.*Image\sFuser\sKit.*%.*\n/)[0].match(/\d+.*\n/)[0];
		else
			var currentImageFuser = "N/A";
		
		//get a chunk of the text that starts with "Media" and ends in "</table>"
		//replace ">" with ">" followed by a line break
		//remove all HTML tags
		//replace instances of multiple line breaks in a row with a single line break
		//remove all instances of "&nbsp;", the javascript space character
		//result will be several lines of text with the tray information
		//put this into an array
		//get trays
		var strTrays = strHTML.match(/Media.*[\s\S]*\<\/table\>/gm)[0];
		var strTraysNoTags = strTrays.replace(/\>/g,'>\n')
			.replace(/\<.*\>/g,'')
			.replace(/\n+/g,'\n')
			.replace(/\&nbsp;/g,'');
		var aryTrays = strTraysNoTags.split('\n');
		var trays = [];

		//iterate through the array of tray information
		for (var i=0; i<aryTrays.length; i++) {
			var line = aryTrays[i];

			//if the element of the array contains "Tray #"
			//the following three elements will be status, size, and type
			if (line.match(/^Tray\s\d+/)) {
				trays.push({
					name:aryTrays[i],
					status:aryTrays[i+1],
					size:aryTrays[i+2],
					type:aryTrays[i+3]
				});
			}
		}
		
		//create a jQuery printerBox element to format/arrange the status information
		var printerBox = $("<div>").attr('class','printerBox');
		
		//Printer Name
		var printerName = $("<div>")
			.attr('class','printerTitle')
			.html("<a href=\"http://" + printer.ip + "/hp/device/this.LCDispatcher\" target='_new'>"+printer.name+"</a>")
			;
		printerBox.append(printerName);
		
		//add current status
		//change color based on status
		var divCurrentStatus = $("<div>")
			.attr('class','cell')
			.html("Status: "+currentStatus);

		//parse text of the current status
		//if it contains jam/'load tray 1'/error/open, decrement status value by 3
		//this ensures that these statuses will put the printer in Urgent state
		//other than that, it's fine
		if (currentStatus.match(/(jam)|(load\ tray\ 1)|(error)|(open)|(CLOSE\ FRONT\ OR\ LEFT\ DOOR)/i)) {
			divCurrentStatus.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (currentStatus.match(/(ready)/i)) {
			divCurrentStatus.css('borderLeftColor','green');
		} else {
			divCurrentStatus.css('borderLeftColor','orange');
			statusValue += 0.2;
		}
		printerBox.append(divCurrentStatus);
		
		//CMYK Toners
		var divTNM = $("<div>")
			.attr('class','cellTitle')
			.html("CMYK Toners")
		;
		printerBox.append(divTNM);
		
		//add current cyan toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentCyanToner = $("<div>")
			.attr('class','cell')
			.html("Cyan Toner: "+currentCyanToner)
		;		
		if (currentCyanToner == "N/A") {	
			divCyanCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentCyanToner.match(/\d+/)[0]) < 1) {
			divCyanCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentCyanToner.match(/\d+/)[0]) < 10) {
			divCurrentCyanToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentCyanToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentCyanToner);
		
		//add current magenta toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentMagentaToner = $("<div>")
			.attr('class','cell')
			.html("Magenta Toner: "+currentMagentaToner)
		;		
		if (currentMagentaToner == "N/A") {	
			divMagentaCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentMagentaToner.match(/\d+/)[0]) < 1) {
			divMagentaCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentMagentaToner.match(/\d+/)[0]) < 10) {
			divCurrentMagentaToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentMagentaToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentMagentaToner);
		
		//add current yellow toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentYellowToner = $("<div>")
			.attr('class','cell')
			.html("Yellow Toner: "+currentYellowToner)
		;		
		if (currentYellowToner == "N/A") {	
			divYellowCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentYellowToner.match(/\d+/)[0]) < 1) {
			divYellowCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentYellowToner.match(/\d+/)[0]) < 10) {
			divCurrentYellowToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentYellowToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentYellowToner);
		
		//add current black toner
		//change background color based on status
		//less than 1% will decrement status value by 3, puts printer in Urgent state
		//less than 5% will incrememt status value by 0.3
		//otherwise, increment status value by 1.0
		var divCurrentBlackToner = $("<div>")
			.attr('class','cell')
			.html("Black Toner: "+currentBlackToner)
		;		
		if (currentBlackToner == "N/A") {	
			divBlackCurrentToner.css('borderLeftColor','orange');
			statusValue += 0.0;
		} else if (Number(currentBlackToner.match(/\d+/)[0]) < 1) {
			divBlackCurrentToner.css('borderLeftColor','red');
			statusValue -= 3;
		} else if (Number(currentBlackToner.match(/\d+/)[0]) < 10) {
			divCurrentBlackToner.css('borderLeftColor','orange');
			statusValue += 0.3;
		} else {
			divCurrentBlackToner.css('borderLeftColor','green');
			statusValue += 1;
		}
		printerBox.append(divCurrentBlackToner);
		
		//Image Transfer / Fuser Kits
		var divITFK = $("<div>")
			.attr('class','cellTitle')
			.html("Image Transfer / Fuser Kits")
		;
		printerBox.append(divITFK);
		
		//add current image transfer kit
		//change color based on status
		//less than 5% will decrease status value by 0.5
		//otherwise, increment status value by 0.5
		var divCurrentImageTransfer = $("<div>")
			.attr('class','cell')
			.html("Image Transfer Kit: "+currentImageTransfer)
			;
		if (currentImageTransfer == "N/A") {
			divCurrentImageTransfer.css('borderLeftColor','orange');
			statusValue += 0.5;
		} else if (Number(currentImageTransfer.match(/\d+/)[0]) < 5) {
			divCurrentImageTransfer.css('borderLeftColor','orange');
			statusValue -= 0.5;
		} else {
			divCurrentImageTransfer.css('borderLeftColor','green');
			statusValue += 0.5;
		}
		printerBox.append(divCurrentImageTransfer);
		
		//add current image fuser kit
		//change color based on status
		//less than 5% will decrease status value by 0.5
		//otherwise, increment status value by 0.5
		var divCurrentImageFuser = $("<div>")
			.attr('class','cell')
			.html("Image Fuser Kit: "+currentImageFuser)
			;
		if (currentImageFuser == "N/A") {
			divCurrentImageFuser.css('borderLeftColor','orange');
			statusValue += 0.5;
		} else if (Number(currentImageFuser.match(/\d+/)[0]) < 5) {
			divCurrentImageFuser.css('borderLeftColor','orange');
			statusValue -= 0.5;
		} else {
			divCurrentImageFuser.css('borderLeftColor','green');
			statusValue += 0.5;
		}
		printerBox.append(divCurrentImageFuser);
		
		// Paper Trays
		var divPT = $("<div>")
			.attr('class','cellTitle')
			.html("Paper Trays")
		;
		printerBox.append(divPT);
		
		//iterate through trays
		//keep track of total tray count, if Tray 1 exists, decrement tray count by 1
		//if tray status reads "OK" increment status value by (1/trayCount)
		//	if all trays that are not Tray 1 are OK, status value will increase by 1.0
		//if tray status has numbers in it
		//	parse out the number
		//		if it's 40,  increment status value by (1/trayCount), make it green
		//		if it's 10, make it orange, don't increment status value
		var trayCount = trays.length;
		for (var i=0; i<trays.length; i++) {
			var tray = trays[i];
			var divTray = $("<div>")
				.attr('class','cell')
				.html(tray.name + ": " + tray.status)
				;

			if (tray.name.match(/tray\s1/i)) {
				trayCount--;
			} else {
				if (tray.status.match(/ok/i)) {
					divTray.css('borderLeftColor','green');
					statusValue += 1/trayCount;
				} else if (tray.status.match(/\d+/)) {
					if (Number(tray.status.match(/\d+/)[0]) >= 40) {
						divTray.css('borderLeftColor','green');
						statusValue += 1/trayCount;						
					} else if (Number(tray.status.match(/\d+/)[0]) >= 10) {
						divTray.css('borderLeftColor','orange');
					
					} else {
						divTray.css('borderLeftColor','red');
					}
				} else {
					divTray.css('borderLeftColor','red');
				}
			}
				
			
			printerBox.append(divTray);
		}
		
		// Displays the status value, integer for determing which category to place printer in
		// Uncomment for testing/debugging
		//divMathFloor = $("<div>")
		//	.attr('class','cell')
		//	.html(Math.floor(statusValue))
		//	;
		//printerBox.append(divMathFloor);
		
		//remove this printer from the "no response" section
		//if there are no more printers in the "no response" section, hide it
		$("div.pending"+printer.nameShort).remove();
		var divNoResponse = $("div",$("div#noresponse"));
		if (divNoResponse.size() == 0)
			$("div#noresponse").hide();				

		//determine which category the printer should be added to by its status value
		if (Math.floor(statusValue) < 1) {
			$("div#urgent").show().append(printerBox);
			alert(printer.name + " NEEDS SERVICE IMMEDIATELY");
		} else if (Math.floor(statusValue) < 2) {
			$("div#needservice").show().append(printerBox);
		} else {
			$("div#goodservice").show().append(printerBox);
		}
	})
	.error( function() {
		//printers[i]["error"] = true;
	});
}